import{_ as e,o as c,c as o,e as l}from"./app-1c716335.js";const i={},d=l("<p><code>align-content</code>、<code>justify-content</code>和<code>align-items</code>是Flex布局中用于对齐内容的属性，它们分别控制项目在交叉轴和主轴上的对齐方式。</p><p>区别如下：</p><ul><li><code>align-content</code>：用于设置多行项目在交叉轴上的对齐方式。它可以影响整个Flex容器内的项目布局。适用于具有多行的Flex容器。</li><li><code>justify-content</code>：用于设置单行项目在主轴上的对齐方式。它影响项目在单行上的布局。适用于只有一行的Flex容器。</li><li><code>align-items</code>：用于设置单个项目在交叉轴上的对齐方式。它影响项目在交叉轴上的布局，并优先级高于<code>align-content</code>。适用于每个项目的个体对齐。</li></ul><p>具体解释如下：</p><ul><li><code>align-content</code>：多行项目的对齐方式，可选值包括： <ul><li><code>flex-start</code>：多行项目在交叉轴起始位置对齐。</li><li><code>flex-end</code>：多行项目在交叉轴末尾位置对齐。</li><li><code>center</code>：多行项目在交叉轴中心位置对齐。</li><li><code>space-between</code>：多行项目均匀分布在交叉轴上，首尾项目与容器边界无间隔。</li><li><code>space-around</code>：多行项目均匀分布在交叉轴上，项目之间以及首尾项目与容器边界之间均有间隔。</li><li><code>stretch</code>（默认值）：多行项目被拉伸以填充整个交叉轴的空间。</li></ul></li><li><code>justify-content</code>：单行项目的对齐方式，可选值包括： <ul><li><code>flex-start</code>（默认值）：单行项目在主轴起始位置对齐。</li><li><code>flex-end</code>：单行项目在主轴末尾位置对齐。</li><li><code>center</code>：单行项目在主轴中心位置对齐。</li><li><code>space-between</code>：单行项目均匀分布在主轴上，首尾项目与容器边界无间隔。</li><li><code>space-around</code>：单行项目均匀分布在主轴上，项目之间以及首尾项目与容器边界之间均有间隔。</li><li><code>space-evenly</code>：单行项目均匀分布在主轴上，包括首尾项目与容器边界之间的间隔。</li></ul></li><li><code>align-items</code>：单个项目的对齐方式，可选值包括： <ul><li><code>flex-start</code>：项目在交叉轴起始位置对齐。</li><li><code>flex-end</code>：项目在交叉轴末尾位置对齐。</li><li><code>center</code>：项目在交叉轴中心位置对齐。</li><li><code>baseline</code>：项目在交叉轴基线上对齐。</li><li><code>stretch</code>（默认值）：项目被拉伸以填充交叉轴的空间。</li></ul></li></ul><p>总结而言，<code>align-content</code>用于控制多行项目在交叉轴上的对齐方式，<code>justify-content</code>用于控制单行项目在主轴上的对齐方式，而<code>align-items</code>用于控制单个项目在交叉轴上的对齐方式。</p>",6),t=[d];function n(a,s){return c(),o("div",null,t)}const u=e(i,[["render",n],["__file","align_content.html.vue"]]);export{u as default};
