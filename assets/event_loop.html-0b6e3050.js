import{_ as o,o as t,c as l,a as e,b as n}from"./app-707e5db1.js";const s={},c=e("h3",{id:"面试官-阐述一下-js-的事件循环",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#面试官-阐述一下-js-的事件循环","aria-hidden":"true"},"#"),n(" 面试官：阐述一下 JS 的事件循环")],-1),_=e("blockquote",null,[e("p",null,"参考答案：")],-1),a=e("blockquote",null,[e("p",null,"事件循环又叫做消息循环，是浏览器渲染主线程的工作方式。"),e("p",null,"在 Chrome 的源码中，它开启一个不会结束的 for 循环，每次循环从消息队列中取出第一个任务执行，而其他线程只需要在合适的时>候将任务加入到队列末尾即可。"),e("p",null,"过去把消息队列简单分为宏队列和微队列，这种说法目前已无法满足复杂的浏览器环境，取而代之的是一种更加灵活多变的处理方式。"),e("p",null,"根据 W3C 官方的解释，每个任务有不同的类型，同类型的任务必须在同一个队列，不同的任务可以属于不同的队列。不同任务队列有不同的优先级，在一次事件循环中，由浏览器自行决定取哪一个队列的任务。但浏览器必须有一个微队列，微队列的任务一定具有最高的优先级，必须优先调度执行。")],-1),r=[c,_,a];function d(u,h){return t(),l("div",null,r)}const p=o(s,[["render",d],["__file","event_loop.html.vue"]]);export{p as default};
