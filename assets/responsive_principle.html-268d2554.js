import{_ as i,r as t,o as n,c as s,a as e,b as a,d as o,e as c}from"./app-0ccd9946.js";const l="/blog/image-20230816151202284.png",h="/blog/image-20230816151518763.png",p="/blog/image-20230816153233154.png",d="/blog/image-20230816154243261.png",g="/blog/image-20230816155910299.png",m="/blog/image-20230816160044262.png",_="/blog/image-20230816160744609.png",u={},b=e("h2",{id:"vue响应式原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue响应式原理","aria-hidden":"true"},"#"),a(" Vue响应式原理")],-1),f={href:"https://v2.cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"},v=c('<p><strong>响应式数据的终极目标</strong>：当对象本身或其属性发生变化时，会运行一些函数，最常见的就是render函数。</p><p>具体实现上，用到了几个核心部件：</p><ol><li>Observer</li><li>Dep</li><li>Watcher</li><li>Scheduler</li></ol><h3 id="observer" tabindex="-1"><a class="header-anchor" href="#observer" aria-hidden="true">#</a> Observer</h3><p><img src="'+l+'" alt="image-20230816151202284"></p><p><img src="'+h+'" alt="image-20230816151518763"></p><h3 id="dep" tabindex="-1"><a class="header-anchor" href="#dep" aria-hidden="true">#</a> Dep</h3><p><img src="'+p+'" alt="image-20230816153233154"></p><h3 id="watcher" tabindex="-1"><a class="header-anchor" href="#watcher" aria-hidden="true">#</a> Watcher</h3><p><img src="'+d+'" alt="image-20230816154243261"></p><p><img src="'+g+'" alt="image-20230816155910299"></p><h3 id="scheduler" tabindex="-1"><a class="header-anchor" href="#scheduler" aria-hidden="true">#</a> Scheduler</h3><p><img src="'+m+'" alt="image-20230816160044262"></p><h3 id="总体流程" tabindex="-1"><a class="header-anchor" href="#总体流程" aria-hidden="true">#</a> 总体流程</h3><p><img src="'+_+'" alt="image-20230816160744609"></p>',15);function x(k,V){const r=t("ExternalLinkIcon");return n(),s("div",null,[b,e("p",null,[e("a",f,[a("官方解释地址"),o(r)])]),v])}const B=i(u,[["render",x],["__file","responsive_principle.html.vue"]]);export{B as default};
