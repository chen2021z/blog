import{_ as n,o as s,c as a,e as t}from"./app-b1043616.js";const p={},e=t(`<p>手写一个curry函数，把其他函数柯里化</p><p>**函数柯里化（Currying）**是一种将具有多个参数的函数转化为一系列单参数函数的技术。柯里化可以让函数更加灵活、可组合和可复用，因为它使得函数可以部分应用，即只传递其中一部分参数而不是所有参数。</p><p>curry 函数里传入的是一个函数，返回的也是一个函数；执行curry 函数，如果参数不够，返回函数，如add(1)/add(1)(2)；最后参数齐了，返回执行结果</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">curry</span><span class="token punctuation">(</span>fun<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//拿到传入函数 形参的个数</span>
  <span class="token keyword">const</span> funArgsLength <span class="token operator">=</span> fun<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token comment">// 积累通过执行传入的参数</span>
  <span class="token keyword">let</span> args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token operator">...</span>newArgs<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 积累参数</span>
    args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>newArgs<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> funArgsLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 参数不够,返回参数</span>
      <span class="token keyword">return</span> calc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 参数够了，返回执行结果</span>
      <span class="token keyword">return</span> <span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> funArgsLength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> calc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[e];function o(l,i){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","curry.html.vue"]]);export{r as default};
